apiVersion: apps/v1
kind: Deployment
metadata: { name: bff }
spec:
  replicas: 1
  selector: { matchLabels: { app: bff } }
  template:
    metadata: { labels: { app: bff } }
    spec:
      containers:
        - name: bff
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          env:
            - { name: PORT, value: "{{ .Values.env.PORT }}" }
            - { name: PRODUCTS_API, value: "{{ .Values.env.PRODUCTS_API }}" }
            - { name: CORS_ORIGINS, value: "{{ .Values.env.CORS_ORIGINS }}" }
          ports: [ { containerPort: 4000 } ]
          readinessProbe: { httpGet: { path: /health, port: 4000 }, initialDelaySeconds: 3, periodSeconds: 10 }
          livenessProbe:  { httpGet: { path: /health, port: 4000 }, initialDelaySeconds: 5, periodSeconds: 15 }
---
apiVersion: v1
kind: Service
metadata: { name: bff }
spec:
  selector: { app: bff }
  ports: [ { port: {{ .Values.service.port }}, targetPort: 4000 } ]
